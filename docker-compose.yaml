services:


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181


  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - '9092:9092'
      expose:
        - '29092'
      environment:
        KAFKA_AUTO_CREATE_TOPICS: true
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
        KAFKA_MIN_INSYNC_REPLICAS: '1'



#  init-kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - kafka
#    entrypoint: [ '/bin/sh', '-c' ]
#    command: |
#      "
#      # blocks until kafka is reachable
#      kafka-topics --bootstrap-server kafka:29092 --list
#
#      echo -e 'Creating kafka topics'
#      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic parse-github --replication-factor 1 --partitions 1
#
#      echo -e 'Successfully created the following topics:'
#      kafka-topics --bootstrap-server kafka:29092 --list"

  api_gateway:
    container_name: api_gateway
    build:
      context: .
      dockerfile: docker/api_gateway.Dockerfile
    ports:
      - "5001:5001"
      - "3001:3001"
      - "8001:8001"
    volumes:
      - ./:/app
    restart: always
    environment:
      - KAFKA_BROKERS=host.docker.internal:9092
    depends_on:
      - kafka

  github_reader:
    container_name: github_reader
    build:
      context: .
      dockerfile: docker/github_reader.Dockerfile
    volumes:
      - ./:/app
    restart: always
    environment:
      - KAFKA_BROKERS=host.docker.internal:29092
    depends_on:
      - kafka
networks:
  microservices:
    name: microservices